/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores2.analysis;

import java.util.*;
import compiladores2.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoInst(ADeclaracaoInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAfectacaoInst(AAfectacaoInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoInst(AFuncaoInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicionalInst(ACondicionalInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACicloInst(ACicloInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaStmtInst(AChamadaStmtInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABreakInst(ABreakInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANextInst(ANextInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADefineDecl(ADefineDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACiniciDecl(ACiniciDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnumeradaDecl(AEnumeradaDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANovoTipoDecl(ANovoTipoDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariadaAfect(AVariadaAfect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplaAfect(AMultiplaAfect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdArrayAfect(AIdArrayAfect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdArray2Afect(AIdArray2Afect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdSimplesAfect(AIdSimplesAfect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIndexAfect(AIndexAfect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncnormalFunc(AFuncnormalFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASvoidCorpo(ASvoidCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaInstrucoesSecCorpo(AListaInstrucoesSecCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFinalInstCorpo(AFinalInstCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoIdCorpo(ARetornoIdCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADuascondicoesCond(ADuascondicoesCond node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalCond(ANormalCond node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACicloNormalCiclo(ACicloNormalCiclo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANominalExp(ANominalExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaExp(AChamadaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExp(APlusExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusExp(AMinusExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegExp(ANegExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp(AMultExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp(ADivExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModExp(AModExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPotExp(APotExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntExp(AIntExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatExp(AFloatExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarChamadaExp(AVarChamadaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExp(AAndExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrExp(AOrExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotExp(ANotExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIguigualExp(AIguigualExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExp(AMenorExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExp(AMaiorExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMeniguExp(AMeniguExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiguExp(AMaiguExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADifExp(ADifExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueExp(ATrueExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseExp(AFalseExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolSimplesExp(ABoolSimplesExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIniArrayExp(AIniArrayExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExp(AVariavelExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaFuncaoCompChamada(AChamadaFuncaoCompChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaFuncaoChamada(AChamadaFuncaoChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariasExpChamada(AVariasExpChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUniExpChamada(AUniExpChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariasDeclChamada(AVariasDeclChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUniDeclChamada(AUniDeclChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamada(AChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostoTipo(ACompostoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntTipoTipo(AIntTipoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatTipoTipo(AFloatTipoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringTipoTipo(AStringTipoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolTipoTipo(ABoolTipoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVoidTipo(AVoidTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIndefinidaTipo(AIndefinidaTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrac(TLBrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrac(TRBrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLSbrac(TLSbrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRSbrac(TRSbrac node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComa(TComa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgu(TIgu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCol(TCol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDdot(TDdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExcl(TExcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPot(TPot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqu(TEqu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenequ(TMenequ node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiequ(TMaiequ node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDif(TDif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefine(TDefine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBreak(TBreak node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNext(TNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVariavel(TVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloatProd(TFloatProd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringProd(TStringProd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
