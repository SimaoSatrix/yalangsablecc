/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores2.analysis;

import compiladores2.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseADeclaracaoInst(ADeclaracaoInst node);
    void caseAAfectacaoInst(AAfectacaoInst node);
    void caseAFuncaoInst(AFuncaoInst node);
    void caseACondicionalInst(ACondicionalInst node);
    void caseACicloInst(ACicloInst node);
    void caseAChamadaStmtInst(AChamadaStmtInst node);
    void caseABreakInst(ABreakInst node);
    void caseANextInst(ANextInst node);
    void caseADefineDecl(ADefineDecl node);
    void caseACiniciDecl(ACiniciDecl node);
    void caseAEnumeradaDecl(AEnumeradaDecl node);
    void caseANovoTipoDecl(ANovoTipoDecl node);
    void caseAVariadaAfect(AVariadaAfect node);
    void caseAMultiplaAfect(AMultiplaAfect node);
    void caseAIdArrayAfect(AIdArrayAfect node);
    void caseAIdArray2Afect(AIdArray2Afect node);
    void caseAIdSimplesAfect(AIdSimplesAfect node);
    void caseAIndexAfect(AIndexAfect node);
    void caseAFuncnormalFunc(AFuncnormalFunc node);
    void caseASvoidCorpo(ASvoidCorpo node);
    void caseAListaInstrucoesSecCorpo(AListaInstrucoesSecCorpo node);
    void caseAFinalInstCorpo(AFinalInstCorpo node);
    void caseARetornoIdCorpo(ARetornoIdCorpo node);
    void caseADuascondicoesCond(ADuascondicoesCond node);
    void caseANormalCond(ANormalCond node);
    void caseACicloNormalCiclo(ACicloNormalCiclo node);
    void caseANominalExp(ANominalExp node);
    void caseAChamadaExp(AChamadaExp node);
    void caseAPlusExp(APlusExp node);
    void caseAMinusExp(AMinusExp node);
    void caseANegExp(ANegExp node);
    void caseAMultExp(AMultExp node);
    void caseADivExp(ADivExp node);
    void caseAModExp(AModExp node);
    void caseAPotExp(APotExp node);
    void caseAIntExp(AIntExp node);
    void caseAFloatExp(AFloatExp node);
    void caseAVarChamadaExp(AVarChamadaExp node);
    void caseAAndExp(AAndExp node);
    void caseAOrExp(AOrExp node);
    void caseANotExp(ANotExp node);
    void caseAIguigualExp(AIguigualExp node);
    void caseAMenorExp(AMenorExp node);
    void caseAMaiorExp(AMaiorExp node);
    void caseAMeniguExp(AMeniguExp node);
    void caseAMaiguExp(AMaiguExp node);
    void caseADifExp(ADifExp node);
    void caseATrueExp(ATrueExp node);
    void caseAFalseExp(AFalseExp node);
    void caseABoolSimplesExp(ABoolSimplesExp node);
    void caseAIniArrayExp(AIniArrayExp node);
    void caseAVariavelExp(AVariavelExp node);
    void caseAChamadaFuncaoCompChamada(AChamadaFuncaoCompChamada node);
    void caseAChamadaFuncaoChamada(AChamadaFuncaoChamada node);
    void caseAVariasExpChamada(AVariasExpChamada node);
    void caseAUniExpChamada(AUniExpChamada node);
    void caseAVariasDeclChamada(AVariasDeclChamada node);
    void caseAUniDeclChamada(AUniDeclChamada node);
    void caseAChamada(AChamada node);
    void caseACompostoTipo(ACompostoTipo node);
    void caseAIntTipoTipo(AIntTipoTipo node);
    void caseAFloatTipoTipo(AFloatTipoTipo node);
    void caseAStringTipoTipo(AStringTipoTipo node);
    void caseABoolTipoTipo(ABoolTipoTipo node);
    void caseAVoidTipo(AVoidTipo node);
    void caseAIndefinidaTipo(AIndefinidaTipo node);

    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBrac(TLBrac node);
    void caseTRBrac(TRBrac node);
    void caseTLSbrac(TLSbrac node);
    void caseTRSbrac(TRSbrac node);
    void caseTComa(TComa node);
    void caseTSemi(TSemi node);
    void caseTDot(TDot node);
    void caseTIgu(TIgu node);
    void caseTCol(TCol node);
    void caseTDdot(TDdot node);
    void caseTExcl(TExcl node);
    void caseTMenor(TMenor node);
    void caseTMaior(TMaior node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTPot(TPot node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTBlank(TBlank node);
    void caseTEqu(TEqu node);
    void caseTMenequ(TMenequ node);
    void caseTMaiequ(TMaiequ node);
    void caseTDif(TDif node);
    void caseTMod(TMod node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTInt(TInt node);
    void caseTFloat(TFloat node);
    void caseTString(TString node);
    void caseTBool(TBool node);
    void caseTVoid(TVoid node);
    void caseTDefine(TDefine node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTReturn(TReturn node);
    void caseTBreak(TBreak node);
    void caseTNext(TNext node);
    void caseTVariavel(TVariavel node);
    void caseTInteger(TInteger node);
    void caseTFloatProd(TFloatProd node);
    void caseTStringProd(TStringProd node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
